<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
	<channel>
		<title>Recology</title>
		<description>An exploration of using R for ecology, evolution, and open science.</description>
		<link>http://schamberlain.github.com</link>
		
			<item>
				<title>add-2d-plots-of-trend-and-wiggle-to-catastrophic-regime-shifts-plot</title>
				<description>&lt;p&gt;&lt;head&gt;
&lt;title&gt;Catastrophic Regime Shifts Visualisation &lt;/title&gt;
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=utf-8&quot;/&gt;
&lt;meta name=&quot;title&quot; content=&quot;Catastrophic Regime Shifts Visualisation &quot;/&gt;
&lt;meta name=&quot;generator&quot; content=&quot;Org-mode&quot;/&gt;
&lt;meta name=&quot;generated&quot; content=&quot;2013-12-21T01:01+1100&quot;/&gt;
&lt;meta name=&quot;author&quot; content=&quot;Ivan Hanigan&quot;/&gt;
&lt;meta name=&quot;description&quot; content=&quot;&quot;/&gt;
&lt;meta name=&quot;keywords&quot; content=&quot;&quot;/&gt;&lt;/p&gt;



&lt;script type=&quot;text/javascript&quot;&gt;
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2013 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
&lt;!--/*--&gt;&lt;![CDATA[/*&gt;&lt;!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = &quot;code-highlighted&quot;;
     elem.className   = &quot;code-highlighted&quot;;
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]&gt;*///--&gt;
&lt;/script&gt;


&lt;p&gt;&lt;/head&gt;
&lt;body&gt;&lt;/p&gt;

&lt;div id=&quot;preamble&quot;&gt;

&lt;/div&gt;




&lt;div id=&quot;content&quot;&gt;
&lt;h1 class=&quot;title&quot;&gt;Catastrophic Regime Shifts Visualisation &lt;/h1&gt;


&lt;hr/&gt;

&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;1 Try adding 2D plot of the trend overtime and the variation within basins of attraction&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;1.1 figure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2&quot;&gt;1.2 code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; Try adding 2D plot of the trend overtime and the variation within basins of attraction&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;

&lt;p&gt;Following on from the previous work I now want to calculate the 2D paths.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.1&lt;/span&gt; figure&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;

&lt;p&gt;&lt;img src=&quot;/images/TrendsAndTriggers-v2.1.png&quot;  alt=&quot;/images/TrendsAndTriggers-v2.1.png&quot; /&gt;
&lt;/p&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;div id=&quot;outline-container-1-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-2&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.2&lt;/span&gt; code&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;




&lt;pre class=&quot;src src-R&quot;&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;functions&lt;/span&gt;
x &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; seq(from=-2.5, to=2.5, by=0.1)

&lt;span style=&quot;color: #586e75;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;load&lt;/span&gt;
data_out &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; read.csv(&lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;TrendsAndTriggers-v2.csv&quot;&lt;/span&gt;)

&lt;span style=&quot;color: #586e75;&quot;&gt;## &lt;/span&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;do&lt;/span&gt;
x2d  &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; matrix(&lt;span style=&quot;color: #b58900;&quot;&gt;NA&lt;/span&gt;, ncol = 3, nrow = 0)
xindex  &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; c(rep(-1.9, 5), 
             -1.7, -1.5 , -1.3, -1.1, 0, 1.1, 1.3, 1.5, 1.7
             , rep(2, 4))
j  &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; 1
xind  &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; xindex[j]
&lt;span style=&quot;color: #859900; font-weight: bold;&quot;&gt;for&lt;/span&gt;(index &lt;span style=&quot;color: #859900; font-weight: bold;&quot;&gt;in&lt;/span&gt; c(1:5,rep(5,8), 6:10)){
x2d &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; rbind(x2d, subset(data_out, y == index &amp;amp; x == xind))
j &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; j + 1
xind &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; xindex[j]
}
&lt;span style=&quot;color: #586e75;&quot;&gt;#  &lt;/span&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;x2d&lt;/span&gt;

png(&lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;/images/TrendsAndTriggers-v2.1.png&quot;&lt;/span&gt;)
layout(matrix(c(1,2,1,3), 2, 2, byrow = &lt;span style=&quot;color: #b58900;&quot;&gt;TRUE&lt;/span&gt;), widths=c(2,1), heights=c(1,2))
res &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt;  persp(x, 1:10, matrix(data_out$z, ncol = 10, nrow = length(x)),
               ylab= &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;y&quot;&lt;/span&gt;,  xlab= &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;x&quot;&lt;/span&gt;, zlab = &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;z&quot;&lt;/span&gt;,  
               theta = 140, 
               phi = 42, ltheta = 120, shade = 0.75,
               expand = 0.5, col = &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;lightgrey&quot;&lt;/span&gt;)
lines (trans3d(x2d$x, x2d$y, x2d$z, pmat = res), col = &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;red&quot;&lt;/span&gt;, lwd = 4)
plot(x2d$x, x2d$z, type = &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;l&quot;&lt;/span&gt;)
plot(x2d$y, x2d$z, type = &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;l&quot;&lt;/span&gt;)
dev.off()
&lt;/pre&gt;



&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;/body&gt;&lt;/p&gt;
</description>
				<published>Sat Dec 21 00:00:00 +1100 2013</published>
				<link>http://schamberlain.github.com/2013/12/add-2d-plots-of-trend-and-wiggle-to-catastrophic-regime-shifts-plot/</link>
			</item>
		
			<item>
				<title>Animation Illustrating Catastrophic Regime Shifts</title>
				<description>&lt;p&gt;&lt;head&gt;
&lt;title&gt;Trends and Triggers Figure &lt;/title&gt;
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=utf-8&quot;/&gt;
&lt;meta name=&quot;title&quot; content=&quot;Trends and Triggers Figure &quot;/&gt;
&lt;meta name=&quot;generator&quot; content=&quot;Org-mode&quot;/&gt;
&lt;meta name=&quot;generated&quot; content=&quot;2013-12-20T00:18+1100&quot;/&gt;
&lt;meta name=&quot;author&quot; content=&quot;Ivan Hanigan&quot;/&gt;
&lt;meta name=&quot;description&quot; content=&quot;&quot;/&gt;
&lt;meta name=&quot;keywords&quot; content=&quot;&quot;/&gt;&lt;/p&gt;



&lt;script type=&quot;text/javascript&quot;&gt;
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2013 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
&lt;!--/*--&gt;&lt;![CDATA[/*&gt;&lt;!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = &quot;code-highlighted&quot;;
     elem.className   = &quot;code-highlighted&quot;;
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]&gt;*///--&gt;
&lt;/script&gt;


&lt;p&gt;&lt;/head&gt;
&lt;body&gt;&lt;/p&gt;

&lt;div id=&quot;preamble&quot;&gt;

&lt;/div&gt;




&lt;div id=&quot;content&quot;&gt;
&lt;h1 class=&quot;title&quot;&gt;Trends and Triggers Figure &lt;/h1&gt;


&lt;hr/&gt;


&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;1 Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-2&quot;&gt;2 The History&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-3&quot;&gt;3 3D surface&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#sec-3-1&quot;&gt;3.1 figure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-3-2&quot;&gt;3.2 code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-4&quot;&gt;4 Try an animation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#sec-4-1&quot;&gt;4.1 figure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-4-2&quot;&gt;4.2 code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-5&quot;&gt;5 Next Steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; Introduction&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;

&lt;p&gt;This work toward a enhanced figure that might be used to tell a detailed story about the mixture of trend, triggers and wiggles.
&lt;/p&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;div id=&quot;outline-container-2&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-2&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;2&lt;/span&gt; The History&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-2&quot;&gt;

&lt;p&gt;The original image I base my imagination on is:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scheffer, M., &amp;amp; Carpenter, S. R. (2003). Catastrophic regime shifts in ecosystems: linking theory to observation [Review]. TRENDS in Ecology and Evolution, 18(12), 648–656. Retrieved from &lt;a href=&quot;http://eaton.math.rpi.edu/csums/papers/Ecostability/scheffercatastrophe.pdf&quot;&gt;http://eaton.math.rpi.edu/csums/papers/Ecostability/scheffercatastrophe.pdf&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;
Which was based on 
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scheffer, M., Carpenter, S., Foley, J. a, Folke, C., &amp;amp; Walker, B. (2001). Catastrophic shifts in ecosystems. Nature, 413(6856), 591–6. &lt;i&gt;&amp;lt;doi:10.1038/35098000&amp;gt;&lt;/i&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;
&lt;img src=&quot;/images/catastrophe.png&quot;  alt=&quot;/images/catastrophe.png&quot; /&gt;
&lt;/p&gt;


&lt;/div&gt;

&lt;/div&gt;

&lt;div id=&quot;outline-container-3&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-3&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;3&lt;/span&gt; 3D surface&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-3&quot;&gt;

&lt;p&gt;First I want to generate a 3d computer image to play with perspective and shading.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-3-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-3-1&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.1&lt;/span&gt; figure&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-1&quot;&gt;


&lt;p&gt;
&lt;img src=&quot;/images/TrendsAndTriggers-v2.png&quot;  alt=&quot;/images/TrendsAndTriggers-v2.png&quot; /&gt;
&lt;/p&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;div id=&quot;outline-container-3-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-3-2&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.2&lt;/span&gt; code&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-2&quot;&gt;




&lt;pre class=&quot;src src-R&quot;&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;#### &lt;/span&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;name:generate-surface ####&lt;/span&gt;
x &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; seq(from=-2.5, to=2.5, by=0.1)
zid &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; .1
&lt;span style=&quot;color: #859900; font-weight: bold;&quot;&gt;for&lt;/span&gt;(y &lt;span style=&quot;color: #859900; font-weight: bold;&quot;&gt;in&lt;/span&gt; 1:10)
{    
  z &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; x^4 - zid * x^3 - 7 * x^2 + x + 6
  &lt;span style=&quot;color: #859900; font-weight: bold;&quot;&gt;if&lt;/span&gt;(y == 1)
  {
    data_out &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; cbind(x,y,z)  
  } &lt;span style=&quot;color: #859900; font-weight: bold;&quot;&gt;else&lt;/span&gt; {
    data_out &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; rbind(data_out, cbind(x,y,z))
  }
  zid &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; zid + 0.1
}

data_out &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; as.data.frame(data_out)
write.csv(data_out, &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;TrendsAndTriggers-v2.csv&quot;&lt;/span&gt;, row.names = F)

png(&lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;/images/TrendsAndTriggers-v2.png&quot;&lt;/span&gt;)
persp(x, 1:10, matrix(data_out$z, ncol = 10, nrow = length(x)), ylab= &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;&quot;&lt;/span&gt;,  xlab= &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;&quot;&lt;/span&gt;, zlab = &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;&quot;&lt;/span&gt;,  
      theta = 140, 
      phi = 42, 
      expand = 0.5, col = &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;lightgrey&quot;&lt;/span&gt;)
dev.off()
&lt;/pre&gt;



&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id=&quot;outline-container-4&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-4&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;4&lt;/span&gt; Try an animation&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-4&quot;&gt;

&lt;p&gt;I'd like to move the ball through the surface.  First need to calculate the path.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-4-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-4-1&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.1&lt;/span&gt; figure&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-1&quot;&gt;

&lt;p&gt;&lt;img src=&quot;/images/animation.gif&quot;  alt=&quot;/images/animation.gif&quot; /&gt;
&lt;/p&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;div id=&quot;outline-container-4-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-4-2&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.2&lt;/span&gt; code&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-2&quot;&gt;




&lt;pre class=&quot;src src-R&quot;&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;functions&lt;/span&gt;
&lt;span style=&quot;color: #859900; font-weight: bold;&quot;&gt;if&lt;/span&gt;(!&lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;require&lt;/span&gt;(animation)) install.packages(&lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;animation&quot;&lt;/span&gt;);
&lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;require&lt;/span&gt;(animation)

&lt;span style=&quot;color: #586e75;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;load&lt;/span&gt;
data_out &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; read.csv(&lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;TrendsAndTriggers-v2.csv&quot;&lt;/span&gt;)

&lt;span style=&quot;color: #586e75;&quot;&gt;## &lt;/span&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;do&lt;/span&gt;
setwd(&lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;images&quot;&lt;/span&gt;)
saveGIF(
{
  ani.options(interval = 0.2)
  xindex  &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; c(0, -1, rep(-1.9, 6), -1, 0, 1, rep(2, 6), 1, 0 , 0)
  j  &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; 1
  xind  &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; xindex[j]
  &lt;span style=&quot;color: #859900; font-weight: bold;&quot;&gt;for&lt;/span&gt;(index &lt;span style=&quot;color: #859900; font-weight: bold;&quot;&gt;in&lt;/span&gt; c(1:10, 9:1)){
  with(subset(data_out, y == index),
       plot(x, z, type = &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;l&quot;&lt;/span&gt;, ylim = c(-15,15))
       )
  with(subset(data_out, y == index &amp;amp; x == xind),
       points(x,z,pch=16,cex = 3)
       )
  j &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; j + 1
  xind &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; xindex[j]
  }
},
outdir = getwd()
)
setwd(&lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;..&quot;&lt;/span&gt;)
&lt;/pre&gt;


&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id=&quot;outline-container-5&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-5&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;5&lt;/span&gt; Next Steps&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-5&quot;&gt;

&lt;ul&gt;
&lt;li&gt;the polynomials should move up and down to give the height of originals
&lt;/li&gt;
&lt;li&gt;the hump in the middle needs to change, so the ball flips more easily
&lt;/li&gt;
&lt;li&gt;I'd like the ball to wiggle, add a random walk 
&lt;/li&gt;
&lt;li&gt;the time series dimension needs to be shown
&lt;/li&gt;
&lt;li&gt;It'd be great to combine this with 2D line plots as well
&lt;/li&gt;
&lt;/ul&gt;





&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;/body&gt;&lt;/p&gt;
</description>
				<published>Fri Dec 20 00:00:00 +1100 2013</published>
				<link>http://schamberlain.github.com/2013/12/animation-illustrating-catastrophic-regime-shifts/</link>
			</item>
		
			<item>
				<title>Marco Fahmi Farewell From ASN-LTERN Data Portal Team</title>
				<description>&lt;ul&gt;
&lt;li&gt;This is Marco Fahmi's final week with the ASN-LTERN Data Portal Team and I'd like to take a moment to reflect on the contributions he has made.&lt;/li&gt;
&lt;li&gt;In this age of distributed teams across the cloud and e-commuting, the old style office whip around and card to sign is not possible so this is my attempt a farewell card using e-collaboration techniques.&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;Who is Marco Fahmi?&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/images/marco.png&quot; alt=&quot;marco.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Marco is a great guy and a extremely good project manager.&lt;/li&gt;
&lt;li&gt;I got this picture of Marco from his Semaphore project team website &lt;a href=&quot;http://semaphoreblog.wordpress.com/team-bios/&quot;&gt;http://semaphoreblog.wordpress.com/team-bios/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;It is a little out of date, he has less hair than that now&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;Semaphore bio&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;Marco sold his first piece of software in 1991; 
a Microsoft Excel macro that was to be used in a masters research project.

His promising career as a software developer came to an end a few months 
before the Dotcom crash when he decided to leave the dungeon and see the world.

Marco has been an academic Ronin since 2000. In his spare time, he plays Capoeira, 
writes a PhD dissertation, spends time with his family and 
contemplates the ideal work-life balance.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;


&lt;h4&gt;Also on twitter &lt;a href=&quot;https://twitter.com/fahmiger&quot;&gt;https://twitter.com/fahmiger&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;I do lots of things -- sometimes upside down.    
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;


&lt;h4&gt;Marco's achievements with ASN-LTERN&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;A full list of Marco's achievements in relation to recent TERN and ANDS projects is formidable and I cannot do justice here.&lt;/li&gt;
&lt;li&gt;I particularly want to note that Marco was instrumental in setting up the first Data Portal and worked very hard getting the Metacat Service working for the Australian Supersite Network (ASN)&lt;/li&gt;
&lt;li&gt;Then Marco spread the joy of that to the Long Term Ecological Network (LTERN) project&lt;/li&gt;
&lt;li&gt;Now the two facilities enjoy a solid platform to build our data portals on.&lt;/li&gt;
&lt;li&gt;Marco was also very influential in me starting to use this blog as my Open Notebook and has offered sage advice&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;THANKS MARCO&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Next year Marco is going to move on to other adventures.&lt;/li&gt;
&lt;li&gt;On behalf of myself and the rest of the team I'd like to say a big THANKYOU!&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;Quotable quotes by Marco&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Science Comes First... Well actually people come first, then Science.&lt;/li&gt;
&lt;li&gt;People Come First, then Science... Well actually money comes first, then People, then Science.&lt;/li&gt;
&lt;li&gt;Follow the lying person to the door of their house, if they continue lying follow them inside to see where they will stop (my paraphrasing, sorry if I muddled it up.)&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;Please pop a note in the comments if you want to send Marco a message.&lt;/h4&gt;
</description>
				<published>Thu Dec 19 00:00:00 +1100 2013</published>
				<link>http://schamberlain.github.com/2013/12/marco-fahmi-farewell-from-asn-ltern-data-portal-team/</link>
			</item>
		
			<item>
				<title>animations-using-R</title>
				<description>&lt;ul&gt;
&lt;li&gt;following on from my previous posts about &lt;a href=&quot;http://ivanhanigan.github.io/2013/07/animated-maps/&quot;&gt;animated maps&lt;/a&gt;, &lt;a href=&quot;http://ivanhanigan.github.io/2013/06/spatio-temporal-animations/&quot;&gt;spatio-temporal animations&lt;/a&gt; and animations &lt;a href=&quot;http://ivanhanigan.github.io/button/index.html&quot;&gt;with buttons for go, stop and reverse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Here is a quick note about how to do a simple animation with R to create a movie file (GIF)&lt;/li&gt;
&lt;li&gt;To create this movie&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img src=&quot;/animation/animation.gif&quot; alt=&quot;animation.gif&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;Code:animations-using-R&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;if(!require(animation)) install.packages(&quot;animation&quot;);
require(animation)
saveGIF(
{
ani.options(nmax = 100, interval = 0.5)
par(mar = c(3, 2.5, 0.5, 0.2), pch = 20, mgp = c(1.5, 0.5,0))
buffon.needle(mat = matrix(c(1, 2, 1, 3), 2))
},
outdir = getwd()
)
&lt;/code&gt;&lt;/pre&gt;
</description>
				<published>Wed Dec 18 00:00:00 +1100 2013</published>
				<link>http://schamberlain.github.com/2013/12/animations-using-R/</link>
			</item>
		
			<item>
				<title>links-to-useful-data-munging-posts</title>
				<description>&lt;p&gt;Here are a few links to some recent data munging tips I picked up last week:&lt;/p&gt;

&lt;h4&gt;Database Relationships&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://pirategrunt.com/2013/12/13/24-days-of-r-day-13/&quot;&gt;This is a a very quick way to look at the relationships in a database&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;h4&gt;MS Access field (column) descriptions:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;I'm looking for methods to access the metadata related to the columns.&lt;/li&gt;
&lt;li&gt;In general MS Access seems to hide these:&lt;/li&gt;
&lt;li&gt;http://blogannath.blogspot.com.au/2010/03/microsoft-access-tips-tricks-list-table.html&lt;/li&gt;
&lt;li&gt;&quot;Field descriptions can be entered by the user when creating the table in design view. It is a highly encouraged practice since the description can provided valuable documentation about the purpose of each field in a table. The inability to extract the field descriptions as part of the table documentation using Access's built-in documenter is therefore quite inconvenient.&quot;&lt;/li&gt;
&lt;li&gt;I can see there is &lt;a href=&quot;http://stackoverflow.com/questions/7041824/retrieve-msaccess-database-column-description&quot;&gt;a C# method, but I'd need visual studio or someone to compile this I suppose?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;My mate Francis said: &quot;you'll have to use a script that uses the Microsoft OLE-DB, as in the stackoverflow answers. However, you don't need Visual Studio or C# to do this, just any language that can interface with Windows COM objects. Python can do this, so this might be your excuse to finally learn it. I imagine there might even by a R library out there somewhere, although it would probably be more convenient to go the python route here.&quot;&lt;/li&gt;
&lt;li&gt;To get started with COM and python, you &lt;a href=&quot;http://timgolden.me.uk/pywin32-docs/html/com/win32com/HTML/QuickStartClientCom.html&quot;&gt;could do worse than to start with&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;Data manipulation&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://christophergandrud.blogspot.com.au/2013/12/three-quick-and-simple-data-cleaning.html&quot;&gt;This guy has created some custom functions that look helpful&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.revolutionanalytics.com/2013/12/tutorial-basic-data-processing-with-r.html&quot;&gt;Revolutions Blog links to several Data Wrangling resources&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;h4&gt;Code editor / IDE&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.r-bloggers.com/new-version-of-rstudio-v0-98/&quot;&gt;Updates to Rstudio server are always worth checking out&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
				<published>Mon Dec 16 00:00:00 +1100 2013</published>
				<link>http://schamberlain.github.com/2013/12/links-to-useful-data-munging-posts/</link>
			</item>
		
			<item>
				<title>open-access-journal-templates-for-latex-with-emacs-orgmode</title>
				<description>&lt;ul&gt;
&lt;li&gt;I appreciate all the arguments for using OA journals&lt;/li&gt;
&lt;li&gt;Using a LaTeX template is also attractive&lt;/li&gt;
&lt;li&gt;This post is a record of some experiences with the BioMedCentral (BMC) template and the Public Library of Science (PLOS) templates&lt;/li&gt;
&lt;li&gt;implemented with my favourite editor for everything Emacs Orgmode.&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;BMC seemed like a good option&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;I started this journey 6 months ago with the BMC template&lt;/li&gt;
&lt;li&gt;because I pitch my work mostly at the health science community BMC seemed logical&lt;/li&gt;
&lt;li&gt;It turns out I downloaded their old LaTeX template and it SUCKED&lt;/li&gt;
&lt;li&gt;If you Download &lt;a href=&quot;http://www.biomedcentral.com/authors/tex&quot;&gt;the template and bibliography stuff&lt;/a&gt; now it looks better&lt;/li&gt;
&lt;li&gt;But I am suspicious now because of the last little while I've been struggling so I've got a skeptical approach&lt;/li&gt;
&lt;li&gt;First copy the stuff to a test dir&lt;/li&gt;
&lt;li&gt;then use TexWorks to test compiling it&lt;/li&gt;
&lt;li&gt;try deleting the provided BBL file, this reveales that the BIB file has to be compiled with bibtex to work&lt;/li&gt;
&lt;li&gt;orgmode produces BBL files when evaluated but I don't know if it'll be smooth with the template&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;PLOS seems like a smoother option&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Download from &lt;a href=&quot;http://www.plosone.org/static/latexGuidelines&quot;&gt;the LaTeX template site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;First thing I notice is there is no BIB file, Yay!&lt;/li&gt;
&lt;li&gt;just make sure  bibliographystyle and bibliography are set&lt;/li&gt;
&lt;li&gt;Looks like it isn't trying so hard&lt;/li&gt;
&lt;/ul&gt;

</description>
				<published>Fri Dec 13 00:00:00 +1100 2013</published>
				<link>http://schamberlain.github.com/2013/12/open-access-journal-templates-for-latex-with-emacs-orgmode/</link>
			</item>
		
			<item>
				<title>dual-code-repository-and-project-website</title>
				<description>&lt;ul&gt;
&lt;li&gt;I really like the idea of using github or bitbucket for a dual code repository and project website&lt;/li&gt;
&lt;li&gt;in Github I set up the master branch with the R package code&lt;/li&gt;
&lt;li&gt;and set up the website using the gh-pages branch&lt;/li&gt;
&lt;li&gt;it has to be called gh-pages, and add an index.html, it will appear at your-username.github.com/repo-name&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;Github&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The best bit about doing this on github is that the R package &quot;devtools&quot; can be used to install the package (so long as you can compile the package)&lt;/li&gt;
&lt;li&gt;on windows you may need to install Rtools and configure the path&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;R Code: install_github&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;require(devtools)
install_github(&quot;repo-name&quot;, &quot;github-account-name&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Bitbucket&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;I recently took these notes about setting up a website on Bitbucket&lt;/li&gt;
&lt;li&gt;I am not sure about how this would work for R packages (the devtools installer mentioned above is a great tool for developing)&lt;/li&gt;
&lt;li&gt;but with unlimited private repositories this seems like a good platform for my &quot;open notebook - selected content&quot; (I need to be selective about what I share and what I keep restricted access only)&lt;/li&gt;
&lt;li&gt;the page is available for &quot;your-account&quot;.bitbucket.org&lt;/li&gt;
&lt;li&gt;create a new repo on the web UI&lt;/li&gt;
&lt;li&gt;I kept the repo private, but the pages will be public,&lt;/li&gt;
&lt;li&gt;added issue tracking and Wiki&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;using git shell&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;mkdir ~/projects/your-account.bitbucket.org
cd ~/projects/your-account.bitbucket.org
git init
git remote add origin ssh://git@bitbucket.org/your-account/your-account.bitbucket.org.git
touch index.org
# use emacs to make changes and publish the html (C-c C-e h)

git commit -m &quot;First commit&quot;
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;now it is online at http://your-account.bitbucket.org/&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;More info at:
&lt;a href=&quot;https://confluence.atlassian.com/display/BITBUCKET/Publishing+a+Website+on+Bitbucket&quot;&gt;https://confluence.atlassian.com/display/BITBUCKET/Publishing+a+Website+on+Bitbucket&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				<published>Mon Dec 09 00:00:00 +1100 2013</published>
				<link>http://schamberlain.github.com/2013/12/dual-code-repository-and-project-website/</link>
			</item>
		
			<item>
				<title>bitbucket-has-unlimited-private-git-repositories-for-universities</title>
				<description>&lt;ul&gt;
&lt;li&gt;I just got introduced to bitbucket, an alternative to Github&lt;/li&gt;
&lt;li&gt;I've used Github for a couple of years and have been paying for extra private repositories&lt;/li&gt;
&lt;li&gt;I did not realise that bitbucket worked with git too (I thought it was just for Mercurial)&lt;/li&gt;
&lt;li&gt;it offers unlimited public and private repository and unlimited users (to collaborate) if you have the Academic plan.&lt;/li&gt;
&lt;li&gt;when you sign up with your academic email address, &lt;a href=&quot;http://blog.bitbucket.org/2011/04/01/free-unlimited-user-source-code-hosting-for-university-students/&quot;&gt;you automatically get an unlimited academic plan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				<published>Mon Dec 09 00:00:00 +1100 2013</published>
				<link>http://schamberlain.github.com/2013/12/bitbucket-has-unlimited-private-git-repositories-for-universities/</link>
			</item>
		
			<item>
				<title>auto-download-bureau-meteorology-diurnal-data</title>
				<description>&lt;p&gt;&lt;head&gt;
&lt;title&gt;Excess Heat Indices &lt;/title&gt;
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=iso-8859-1&quot;/&gt;
&lt;meta name=&quot;title&quot; content=&quot;Excess Heat Indices &quot;/&gt;
&lt;meta name=&quot;generator&quot; content=&quot;Org-mode&quot;/&gt;
&lt;meta name=&quot;generated&quot; content=&quot;2013-12-07T23:25+1100&quot;/&gt;
&lt;meta name=&quot;author&quot; content=&quot;Ivan Hanigan&quot;/&gt;
&lt;meta name=&quot;description&quot; content=&quot;&quot;/&gt;
&lt;meta name=&quot;keywords&quot; content=&quot;&quot;/&gt;&lt;/p&gt;



&lt;script type=&quot;text/javascript&quot;&gt;
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2013 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
&lt;!--/*--&gt;&lt;![CDATA[/*&gt;&lt;!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = &quot;code-highlighted&quot;;
     elem.className   = &quot;code-highlighted&quot;;
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]&gt;*///--&gt;
&lt;/script&gt;


&lt;p&gt;&lt;/head&gt;
&lt;body&gt;&lt;/p&gt;

&lt;div id=&quot;preamble&quot;&gt;

&lt;/div&gt;




&lt;div id=&quot;content&quot;&gt;
&lt;h1 class=&quot;title&quot;&gt;Excess Heat Indices &lt;/h1&gt;


&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;1 auto-download-bureau-meteorology-diurnal-data&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;1.1 First the FTP server URL structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2&quot;&gt;1.2 table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-3&quot;&gt;1.3 R Code: bom&lt;sub&gt;download&lt;/sub&gt;.r&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-4&quot;&gt;1.4 R Code: bom&lt;sub&gt;collation&lt;/sub&gt;.r&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-5&quot;&gt;1.5 BAT file (windoze)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-6&quot;&gt;1.6 check the data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-7&quot;&gt;1.7 Conclusions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1&lt;/span&gt; auto-download-bureau-meteorology-diurnal-data&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1&quot;&gt;


&lt;ul&gt;
&lt;li&gt;We;re looking at health impacts of high temperatures at work 
&lt;/li&gt;
&lt;li&gt;need to see the highest temperatures during the working hours
&lt;/li&gt;
&lt;li&gt;bom provides hourly data for download, but only 3 days at a time
&lt;/li&gt;
&lt;li&gt;we build a script and set it on a schedule to run every day, download the data and collate the results
&lt;/li&gt;
&lt;/ul&gt;



&lt;/div&gt;

&lt;div id=&quot;outline-container-1-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.1&lt;/span&gt; First the FTP server URL structure&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1&quot;&gt;


&lt;ul&gt;
&lt;li&gt;The URLS are predictable, just need the station id, state and a code if metro or rural
&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;

&lt;/div&gt;

&lt;div id=&quot;outline-container-1-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-2&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.2&lt;/span&gt; table&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2&quot;&gt;

&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;right&quot; /&gt;&lt;col class=&quot;left&quot; /&gt;&lt;col class=&quot;right&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td class=&quot;right&quot;&gt;Station&lt;sub&gt;ID&lt;/sub&gt;&lt;/td&gt;&lt;td class=&quot;left&quot;&gt;State&lt;/td&gt;&lt;td class=&quot;right&quot;&gt;City&lt;sub&gt;9&lt;/sub&gt;&lt;sub&gt;or&lt;/sub&gt;&lt;sub&gt;regional&lt;/sub&gt;&lt;sub&gt;8&lt;/sub&gt;_&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;right&quot;&gt;94774&lt;/td&gt;&lt;td class=&quot;left&quot;&gt;N&lt;/td&gt;&lt;td class=&quot;right&quot;&gt;9&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;right&quot;&gt;95719&lt;/td&gt;&lt;td class=&quot;left&quot;&gt;N&lt;/td&gt;&lt;td class=&quot;right&quot;&gt;8&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;right&quot;&gt;94768&lt;/td&gt;&lt;td class=&quot;left&quot;&gt;N&lt;/td&gt;&lt;td class=&quot;right&quot;&gt;9&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;right&quot;&gt;94763&lt;/td&gt;&lt;td class=&quot;left&quot;&gt;N&lt;/td&gt;&lt;td class=&quot;right&quot;&gt;9&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;right&quot;&gt;94767&lt;/td&gt;&lt;td class=&quot;left&quot;&gt;N&lt;/td&gt;&lt;td class=&quot;right&quot;&gt;9&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;right&quot;&gt;94910&lt;/td&gt;&lt;td class=&quot;left&quot;&gt;N&lt;/td&gt;&lt;td class=&quot;right&quot;&gt;8&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;right&quot;&gt;94929&lt;/td&gt;&lt;td class=&quot;left&quot;&gt;N&lt;/td&gt;&lt;td class=&quot;right&quot;&gt;8&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;right&quot;&gt;95896&lt;/td&gt;&lt;td class=&quot;left&quot;&gt;N&lt;/td&gt;&lt;td class=&quot;right&quot;&gt;8&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;right&quot;&gt;94693&lt;/td&gt;&lt;td class=&quot;left&quot;&gt;N&lt;/td&gt;&lt;td class=&quot;right&quot;&gt;8&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;right&quot;&gt;94691&lt;/td&gt;&lt;td class=&quot;left&quot;&gt;N&lt;/td&gt;&lt;td class=&quot;right&quot;&gt;8&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;right&quot;&gt;95677&lt;/td&gt;&lt;td class=&quot;left&quot;&gt;S&lt;/td&gt;&lt;td class=&quot;right&quot;&gt;9&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;right&quot;&gt;94675&lt;/td&gt;&lt;td class=&quot;left&quot;&gt;S&lt;/td&gt;&lt;td class=&quot;right&quot;&gt;9&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;right&quot;&gt;94672&lt;/td&gt;&lt;td class=&quot;left&quot;&gt;S&lt;/td&gt;&lt;td class=&quot;right&quot;&gt;9&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;right&quot;&gt;94866&lt;/td&gt;&lt;td class=&quot;left&quot;&gt;V&lt;/td&gt;&lt;td class=&quot;right&quot;&gt;9&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;right&quot;&gt;95867&lt;/td&gt;&lt;td class=&quot;left&quot;&gt;V&lt;/td&gt;&lt;td class=&quot;right&quot;&gt;9&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;right&quot;&gt;94868&lt;/td&gt;&lt;td class=&quot;left&quot;&gt;V&lt;/td&gt;&lt;td class=&quot;right&quot;&gt;9&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;right&quot;&gt;94875&lt;/td&gt;&lt;td class=&quot;left&quot;&gt;V&lt;/td&gt;&lt;td class=&quot;right&quot;&gt;8&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;




&lt;ul&gt;
&lt;li&gt;now create a script called &quot;bom&lt;sub&gt;download&lt;/sub&gt;.r&quot;
&lt;/li&gt;
&lt;li&gt;it takes the station details and paste into the URLs
&lt;/li&gt;
&lt;li&gt;downloads the files
&lt;/li&gt;
&lt;li&gt;stores in a directory for each days downloads
&lt;/li&gt;
&lt;/ul&gt;



&lt;/div&gt;

&lt;/div&gt;

&lt;div id=&quot;outline-container-1-3&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-3&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.3&lt;/span&gt; R Code: bom&lt;sub&gt;download&lt;/sub&gt;.r&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-3&quot;&gt;




&lt;pre class=&quot;src src-R&quot;&gt;filename = &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;~/data/ExcessHeatIndices/inst/doc/weather_stations.csv&quot;&lt;/span&gt;
output_directory = &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;~/bom-downloads&quot;&lt;/span&gt;
setwd(output_directory)

urls &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; read.csv(filename)
urls_list &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; paste(sep = &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;http://www.bom.gov.au/fwo/ID&quot;&lt;/span&gt;,
                  urls$State,
                  &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;60&quot;&lt;/span&gt;, 
                  urls$City_9_or_regional_8_,
                  &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;01/ID&quot;&lt;/span&gt;,
                  urls$State,
                  &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;60&quot;&lt;/span&gt;,
                  urls$City_9_or_regional_8_,
                  &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;01.&quot;&lt;/span&gt;,
                  urls$Station_ID,
                  &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;.axf&quot;&lt;/span&gt;)

output_directory &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; file.path(output_directory,Sys.Date())
dir.create(output_directory)

&lt;span style=&quot;color: #859900; font-weight: bold;&quot;&gt;for&lt;/span&gt;(url &lt;span style=&quot;color: #859900; font-weight: bold;&quot;&gt;in&lt;/span&gt; urls_list)
{
  output_file &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; file.path(output_directory,basename(url))
  download.file(url, output_file, mode = &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;wb&quot;&lt;/span&gt;)

}
print(&lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;SUCCESS&quot;&lt;/span&gt;)

&lt;/pre&gt;




&lt;ul&gt;
&lt;li&gt;Now the data can be combined
&lt;/li&gt;
&lt;li&gt;clean up the header and extraneous extra line at the bottom
&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;

&lt;/div&gt;

&lt;div id=&quot;outline-container-1-4&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-4&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.4&lt;/span&gt; R Code: bom&lt;sub&gt;collation&lt;/sub&gt;.r&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-4&quot;&gt;





&lt;pre class=&quot;src src-R&quot;&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;this takes data in directories from bom_download.r&lt;/span&gt;
 
&lt;span style=&quot;color: #586e75;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;first get list of directories&lt;/span&gt;
filelist &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; dir(pattern = &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;axf&quot;&lt;/span&gt;, recursive = T)
filelist
 
&lt;span style=&quot;color: #586e75;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;next get directories for days we haven't done yet&lt;/span&gt;
&lt;span style=&quot;color: #859900; font-weight: bold;&quot;&gt;if&lt;/span&gt;(file.exists(&lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;complete_dataset.csv&quot;&lt;/span&gt;))
{
complete_data &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; read.csv(&lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;complete_dataset.csv&quot;&lt;/span&gt;, stringsAsFactors = F)
&lt;span style=&quot;color: #586e75;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;str(complete_data)&lt;/span&gt;
last_collated &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; max(as.Date(complete_data$date_downloaded))
&lt;span style=&quot;color: #586e75;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;max(complete_data$local_hrmin)&lt;/span&gt;
 
days_downloaded &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; dirname(filelist)
filelist &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; filelist[which(as.Date(days_downloaded) &amp;gt; as.Date(last_collated))]
}
 
&lt;span style=&quot;color: #586e75;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;for these collate them into the complete file&lt;/span&gt;
&lt;span style=&quot;color: #859900; font-weight: bold;&quot;&gt;for&lt;/span&gt;(f &lt;span style=&quot;color: #859900; font-weight: bold;&quot;&gt;in&lt;/span&gt; filelist)
{
  &lt;span style=&quot;color: #586e75;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;f &amp;lt;- filelist[2]&lt;/span&gt;
  print(f)
  fin &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; read.csv(f, colClasses = c(&lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;local_date_time_full.80.&quot;&lt;/span&gt; = &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;character&quot;&lt;/span&gt;), 
    stringsAsFactors = F, skip = 19)
  fin &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; fin[1:(nrow(fin) - 1),]
  fin$date_downloaded &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; dirname(f)
  fin$local_year &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; substr(fin$local_date_time_full.80., 1, 4)
  fin$local_month &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; substr(fin$local_date_time_full.80., 5, 6)
  fin$local_day &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; substr(fin$local_date_time_full.80., 7, 8)
  fin$local_hrmin &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; substr(fin$local_date_time_full.80., 9, 12)
  fin$local_date &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; paste(fin$local_year, fin$local_month, fin$local_day, sep = &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;-&quot;&lt;/span&gt;)
  &lt;span style=&quot;color: #859900; font-weight: bold;&quot;&gt;if&lt;/span&gt;(file.exists(&lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;complete_dataset.csv&quot;&lt;/span&gt;))
  {
  write.table(fin, &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;complete_dataset.csv&quot;&lt;/span&gt;, row.names = F, sep = &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;,&quot;&lt;/span&gt;, append = T, col.names = F)
  } &lt;span style=&quot;color: #859900; font-weight: bold;&quot;&gt;else&lt;/span&gt; {
  write.table(fin, &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;complete_dataset.csv&quot;&lt;/span&gt;, row.names = F, sep = &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;,&quot;&lt;/span&gt;)
  }
}
&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;so now let;s automate the process
&lt;/li&gt;
&lt;li&gt;make a BAT file
&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;

&lt;/div&gt;

&lt;div id=&quot;outline-container-1-5&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-5&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.5&lt;/span&gt; BAT file (windoze)&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-5&quot;&gt;





&lt;pre class=&quot;src src-R&quot;&gt;&lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;C:\Program Files\R\R-2.15.2\bin\Rscript.exe&quot;&lt;/span&gt; &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;~\bom-downloads\bom_download.r&quot;&lt;/span&gt;
&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;add this  bat file to the scheduled tasks in your control panel
&lt;/li&gt;
&lt;li&gt;use chron for a linux version
&lt;/li&gt;
&lt;/ul&gt;



&lt;/div&gt;

&lt;/div&gt;

&lt;div id=&quot;outline-container-1-6&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-6&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.6&lt;/span&gt; check the data&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-6&quot;&gt;




&lt;pre class=&quot;src src-R&quot;&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;#### &lt;/span&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;name:check the data ####&lt;/span&gt;
&lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;require&lt;/span&gt;(plyr)

setwd(&lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;~/bom-downloads&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;source&lt;/span&gt;(&lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;bom_download.r&quot;&lt;/span&gt;)
dir()
&lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;source&lt;/span&gt;(&lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;bom_collation.r&quot;&lt;/span&gt;)

complete_data &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; read.csv(&lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;complete_dataset.csv&quot;&lt;/span&gt;, stringsAsFactors = F)
str(complete_data)

&lt;span style=&quot;color: #586e75;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #586e75;&quot;&gt;Quick and dirty de-duplication&lt;/span&gt;
table(complete_data$name.80.)
qc &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; subset(complete_data, name.80. == &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;Broken Hill Airport&quot;&lt;/span&gt;)
qc &lt;span style=&quot;color: #268bd2; font-weight: bold;&quot;&gt;&amp;lt;-&lt;/span&gt; ddply(qc, &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;local_date_time_full.80.&quot;&lt;/span&gt;,
  summarise, apparent_temp = mean(apparent_t))

names(qc)
png(&lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;qc-diurnal-plot.png&quot;&lt;/span&gt;)
with(qc,
     plot(apparent_temp, type= &lt;span style=&quot;color: #2aa198;&quot;&gt;&quot;l&quot;&lt;/span&gt;)
     )
dev.off()
&lt;/pre&gt;


&lt;p&gt;
&lt;img src=&quot;/images/qc-diurnal-plot.png&quot;  alt=&quot;qc-diurnal-plot.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id=&quot;outline-container-1-7&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-7&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.7&lt;/span&gt; Conclusions&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-7&quot;&gt;


&lt;ul&gt;
&lt;li&gt;watch the data roll on in
&lt;/li&gt;
&lt;li&gt;each day there are about 3 days downloaded
&lt;/li&gt;
&lt;li&gt;meaning duplicates will be frequent, need to write a script to de-duplicate
&lt;/li&gt;
&lt;li&gt;cheers!
&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;/body&gt;
&lt;/html&gt;&lt;/p&gt;
</description>
				<published>Fri Dec 06 00:00:00 +1100 2013</published>
				<link>http://schamberlain.github.com/2013/12/auto-download-bureau-meteorology-diurnal-data/</link>
			</item>
		
			<item>
				<title>the-history-of-ons</title>
				<description>&lt;ul&gt;
&lt;li&gt;according to &lt;a href=&quot;http://en.wikipedia.org/wiki/Open_notebook_science&quot;&gt;http://en.wikipedia.org/wiki/Open_notebook_science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The term Open Notebook Science[7] was first used in a blog post by Jean-Claude Bradley,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This article &lt;a href=&quot;http://www.infotoday.com/it/sep10/Poynder.shtml&quot;&gt;http://www.infotoday.com/it/sep10/Poynder.shtml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  says Jean-Claude Bradley an organic chemist at Drexel University in
  Philadelphia. As with most scientists, Bradley used to be very
  secretive. He kept his research under wraps until publication and
  frequently applied for patents on his work in nanotechnology and gene
  therapy.&lt;/p&gt;

&lt;p&gt;  However, he asked himself a difficult question 5 years ago: Was his
  research having the kind of impact he would like? He had to conclude
  that the answer was “no,” and this was partly a consequence of the
  culture of secrecy that permeates research today. So Bradley was
  determined to be more open. Since his collaborators were not of the
  same mind, he severed his ties with them and, in 2005, he launched a
  web-based initiative called UsefulChem. As the name implies, the aim
  of the initiative was also to work in the world of useful science and,
  today, Bradley makes new anti-malarial compounds.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Other links&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://opensourcemalaria.org/&quot;&gt;http://opensourcemalaria.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://malaria.ourexperiment.org/&quot;&gt;http://malaria.ourexperiment.org/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mat Todd's group is at the School of Chemistry at The University of Sydney is practicing this with a (Schistosomiasis notebook and Malaria notebook)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://openwetware.org/wiki/Todd&quot;&gt;http://openwetware.org/wiki/Todd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				<published>Wed Dec 04 00:00:00 +1100 2013</published>
				<link>http://schamberlain.github.com/2013/12/the-history-of-ons/</link>
			</item>
		
	</channel>
</rss>