<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>DisentangleThings</title>
 <link href="http://ivanhanigan.github.com/feed/" rel="self"/>
 <link href="http://ivanhanigan.github.com/"/>
 <updated>2014-08-21T15:39:08+10:00</updated>
 <id>http://ivanhanigan.github.com/</id>
 <author>
   <name>ivanhanigan</name>
   <email>ivan.hanigan@gmail.com</email>
 </author>

 
 <entry>
   <title>hotwire-a-morpho-package-using-r-and-xml-editor</title>
   <link href="http://ivanhanigan.github.com/2014/08/hotwire-a-morpho-package-using-r-and-xml-editor/"/>
   <updated>2014-08-21T00:00:00+10:00</updated>
   <id>http://ivanhanigan.github.com/2014/08/hotwire-a-morpho-package-using-r-and-xml-editor</id>
   <content type="html">&lt;h1&gt;Introduction&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;at my workplace we have had a significant number of issues trying to use Morpho to publish ecological data&lt;/li&gt;
&lt;li&gt;I have been interested in the R EML package as an alternative and got this advice from the authors&lt;/li&gt;
&lt;li&gt;&quot;I'm really happy to see you combining these tools and making best use of each of their features (authoring for Morpho, automation for REML). We should think more about how to make this combination seamless.&quot; &lt;a href=&quot;https://github.com/ropensci/EML/issues/93&quot;&gt;https://github.com/ropensci/EML/issues/93&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;That dream still seems a long way off (and I suspect will see a re-write of morpho in R's &quot;shiny apps&quot; language)&lt;/li&gt;
&lt;li&gt;but here is an attempt to circumvent some of our main issues which seem to do with using Morpho to do anything with data tables&lt;/li&gt;
&lt;li&gt;(morpho seems fine when just dealing with the documentation parts of EML)&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;Create a Minimal Morpho EML&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;I am going to use Morpho to create a new data package and just step thru all the steps,  add TBA to all the options&lt;/li&gt;
&lt;li&gt;another option was to create this using the REML example&lt;/li&gt;
&lt;li&gt;but then there is uncertainty if it will be accepted easily by Morpho when imported&lt;/li&gt;
&lt;li&gt;seriously, just TBA and only for the required fields (these are in red)&lt;/li&gt;
&lt;li&gt;take note of the docid number, and save locally&lt;/li&gt;
&lt;li&gt;now we can import this as our template.  lets save it as a reference file&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;Code:&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;cp ~/.morpho/profiles/hanigan/data/hanigan/XX.1 ~/tools/morpho_template_eml.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;


&lt;h1&gt;Import to morpho&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;this skeletal eml can now be imported in the File menu / import&lt;/li&gt;
&lt;li&gt;this is the 'hotwired' starting point of our morpho packages&lt;/li&gt;
&lt;li&gt;I want to do this for others too. so change morpho profile on your computer and import the xml&lt;/li&gt;
&lt;li&gt;gives a new package with a new morpho generated docid number&lt;/li&gt;
&lt;li&gt;add the package title, with enough identification in the title to allow quick reference&lt;/li&gt;
&lt;li&gt;SET THE ACCESS TO NOT PUBLIC BEFORE SAVING&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;generate the EML Skeleton using the R EML package&lt;/h1&gt;

&lt;h4&gt;Code:&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;library(EML)
library(devtools)
install_github(&quot;disentangle&quot;, &quot;ivanhanigan&quot;)
unit_defs &amp;lt;- reml_boilerplate(dat,titl = &quot;myFile&quot;)
# you just got a quick and dirty unit_defs, these need to be made proper in morpho
# we can get the col names easily
col_defs &amp;lt;- names(dat)
# then create a dataset with metadata
ds &amp;lt;- data.set(dat,
               col.defs = col_defs,
               unit.defs = unit_defs
               )
# now write EML metadata file
eml_config(creator=&quot;TBA &amp;lt;fakeaddress@gmail.com&amp;gt;&quot;)
wd &amp;lt;- getwd()
setwd(outdir)
eml_write(ds,
          file = gsub(&quot;.csv&quot;, &quot;_eml_skeleton.xml&quot;, outfile),
          title = gsub(&quot;.csv&quot;, &quot;&quot;, outfile)
          )
tempfile &amp;lt;- dir(pattern=&quot;^data_table_&quot;)
file.rename(tempfile, outfile)
# rename the CSV file.
setwd(wd)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;


&lt;h1&gt;now attach the data&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;to avoid risk of morpho getting confused it is probably safe to let it start the new dataTable tags&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img src=&quot;/images/morpho-hotwire-1.png&quot; alt=&quot;morpho-hotwire-1.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;say it is a simple CSV&lt;/li&gt;
&lt;li&gt;say the name for the file for title, TBA for all other required fields, for attributes add one and say it is datetime (to be quick)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img src=&quot;/images/morpho-hotwire-2.png&quot; alt=&quot;morpho-hotwire-2.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;note the docid (41.2) and download file id (ecogrid://knb/datalibrarian2.42.1)&lt;/li&gt;
&lt;li&gt;save locally and close&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;now replace the metadata info&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;use an XML editor to go to the eml skeleton we created in morpho and also to the one created in R&lt;/li&gt;
&lt;li&gt;in the morpho generated XML find the attributeList tag within the dataTable group, mine looked like&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;Code:&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;attributeList&amp;gt;&amp;lt;attribute id=&quot;1408536821935&quot;&amp;gt;...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;and we know that the stuff we want to replace finishes with the closing tag &lt;/attributeList&gt;&lt;/li&gt;
&lt;li&gt;I think the ID is irrelevant, except Morpho won't allow multiple of the same id number within an EML&lt;/li&gt;
&lt;li&gt;find the same and replace in the REML generated bit&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img src=&quot;/images/morpho-attributelist.png&quot; alt=&quot;morpho-attributelist.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And paste:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/morpho-dataformat.png&quot; alt=&quot;morpho-dataformat.png&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;Also do the&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;dataFormat&amp;gt;&amp;lt;/dataFormat&amp;gt; section
&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;add another dataset&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;assuming you already ran reml_boilerplate for this new file&lt;/li&gt;
&lt;li&gt;use morpho menus to add another datatabe&lt;/li&gt;
&lt;li&gt;save locally and close morpho&lt;/li&gt;
&lt;li&gt;open with XML editor and the REML EML Skeleton&lt;/li&gt;
&lt;li&gt;transfer dataformat and attributelist stuff&lt;/li&gt;
&lt;li&gt;go to documentation and make minor mod (space in abstract?), save locally&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;share it with colleagues&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;go to documentation menu &gt; access info and set/verify to public = no add user&lt;/li&gt;
&lt;li&gt;save to metacat&lt;/li&gt;
&lt;li&gt;now go to their (windows?) machine and log in as the same morpho profile,&lt;/li&gt;
&lt;li&gt;log in to the metacat and download the new package for work&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 
</feed>
