<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>DisentangleThings</title>
 <link href="http://ivanhanigan.github.com/feed/" rel="self"/>
 <link href="http://ivanhanigan.github.com/"/>
 <updated>2015-12-20T14:57:47+11:00</updated>
 <id>http://ivanhanigan.github.com/</id>
 <author>
   <name>ivanhanigan</name>
   <email>ivan.hanigan@gmail.com</email>
 </author>

 
 <entry>
   <title>This is an open notebook but selected content delayed</title>
   <link href="http://ivanhanigan.github.com/2015/12/this-is-an-open-notebook-but-selected-content-delayed/"/>
   <updated>2015-12-20T00:00:00+11:00</updated>
   <id>http://ivanhanigan.github.com/2015/12/this-is-an-open-notebook-but-selected-content-delayed</id>
   <content type="html">&lt;h4&gt;Open Notebook Science, Selected Content, Delayed (ONS-SCD)&lt;/h4&gt;

&lt;p&gt;I am trying to juggle my work in a dual Open-And-Closed way.&lt;/p&gt;

&lt;p&gt;To explain: I try to keep an electronic ‘Open Notebook’ that aligns
with the principles of the Open Notebook Science (ONS) movement’s
‘Selected Content – Delayed’ category (ONS-SCD).  Back in 2012 when I started my notebook I looked
around for models of what style of publication I wanted.  I knew that some of my work was owned
by the university I work at, and I am not allowed to publish this openly.
Then there is other stuff I owned as part of my PhD, but that I might
not want to release all the details of my work.  So I settled on a 'Selected Content - Delayed' category and got the logo shown here from the (now-defunct) website &lt;a href=&quot;http://onsclaims.wikispaces.com/&quot;&gt;http://onsclaims.wikispaces.com/&lt;/a&gt;.  The ONS movement
is still described on Wikipedia though &lt;a href=&quot;https://en.wikipedia.org/wiki/Open_notebook_science&quot;&gt;https://en.wikipedia.org/wiki/Open_notebook_science&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ONS-SCD.png&quot; alt=&quot;/images/ONS-SCD.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this publication model I
make publicly available the content of my research notebook (like a
blog), in which I write reports of the details of the data, code and
documents related to my research. I selectively make material open on
github, and I sometimes delay publication of the material that I keep
in my private research notebook.  That work is kept private either
because it includes unpublished work that I wish to keep embargoed
until after publication, or because it is all the gory details of
process of writing code to create or analyse data that is not
appropriate for open publication.&lt;/p&gt;

&lt;p&gt;In previous work I have either paid for additional private repos on
github, and made the repo open once the paper is published, or
alternately used bitbucket with unlimited free private repos for
university students and then just put together a public repo for
sharing 'polished' outputs.&lt;/p&gt;

&lt;p&gt;The upshot is that I use this part open / part closed approach during the data exploration, cleaning, analysis and writing. In my opinion as long as the final workflow is clearly and openly documented and reproducible, that's  the most important thing.&lt;/p&gt;

&lt;h4&gt;The motivation stems back to the Climategate scandal and infamous 'Harry Readme' file&lt;/h4&gt;

&lt;p&gt;My supervisors over the years have all been really supportive of working in an open way and I have flirted with the idea of being completely open.  However, I got a little worried about the implications of working too openly when malicious people might dig though my work for vexatious reasons, such as looking for errors or embarrassing comments I might inadvertently make that, when taken out of context, might make me sound foolish.&lt;/p&gt;

&lt;p&gt;This sounds far fetched, but as an example of this, a few years ago there was a fair amount of heat generated by a lot of
emails and other documents from the University of East Anglia Climate
Research University.  I was particularly interested because I was
struggling to make sense of a lot of weird and wonderful databases and
I felt a lot of sympathy for 'Harry', someone who as far as I could
tell was doing a pretty good job of exploring, cleaning and
documenting their work.&lt;/p&gt;

&lt;p&gt;Here is one journalists summary of this issue &lt;a href=&quot;http://blogs.telegraph.co.uk/technology/iandouglas/100004334/harry_read_me-txt-the-climategate-gun-that-does-not-smoke/&quot;&gt;http://blogs.telegraph.co.uk/technology/iandouglas/100004334/harry_read_me-txt-the-climategate-gun-that-does-not-smoke/&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;&quot;&gt;
the contents of the harry_read_me.txt file, apparently leaked from the
University of East Anglia and now becoming a totem for climate change
sceptics to gather around as though it were a piece of the true cross.

This file – thousands of lines of annotations kept on the process of
re-developing a computer model of the climate form figures submitted
by weather stations around the world and other historical data sets –
holds a personal commentary written by an un-named developer (let's
call him Harry), frustrated and often tied up in knots, working late
into the night and the weekend trying to squeeze differently-formatted
numbers into a consistent narrative.  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;


&lt;h4&gt;Using git and Github in an ONS-SCD model&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Recall Noble's framework?  The results folder is what I want to publish&lt;/li&gt;
&lt;li&gt;Noble recommended the following folder and file structures &lt;a href=&quot;http://dx.doi.org/10.1371/journal.pcbi.1000424.g001&quot;&gt;http://dx.doi.org/10.1371/journal.pcbi.1000424.g001&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I revised his conceptual diagram, and I blogged about this at &lt;a href=&quot;/2015/10/a-quick-review-of-a-quick-guide-to-organizing-computational-biology-projects/&quot;&gt;/2015/10/a-quick-review-of-a-quick-guide-to-organizing-computational-biology-projects/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;pre&gt;&lt;code&gt;/projectname (eg msms)/
    /doc/
        /ms-analysis.html 
        /paper/
            /msms.tex
            /msms.pdf
    /data/
        /YYYY-MM-DD/
            /yeast/
                /README
                /yeast.sqt
            /worm/
                /README
                /worm.sqt
    /src/
        /ms-analysis.c
    /bin/
        /parse-sqt.py
    /results/
        /notebook.html 
        /YYYY-MM-DD-1/
            /runall
            /split1/
            /split2/
        /YYYY-MM-DD-2/
            /runall
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;


&lt;h4&gt;I want to publish my results, rather than my process&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;I had the realisation that &lt;a href=&quot;/2015/10/how-to-effectively-implement-electronic-lab-notebooks-in-epidemiology/&quot;&gt;/2015/10/how-to-effectively-implement-electronic-lab-notebooks-in-epidemiology/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;pre&gt;&lt;code&gt;
    the 'Experiment Results' level is about work you might do on a 
       single day, or over a week

    Workflow scripts: At this level each 'experiment' is written up in
    chronological order, as entries to the Worklog at the meso level

    Noble recommends 'create either a README file, in which I store
    every command line that I used while performing the experi- ment,
    or a driver script (I usually call this runall) that carries out
    the entire experiment automatically'...

    and 'you should end up with a file that is parallel to the lab
    notebook entry. The lab notebook contains a prose description of
    the exper- iment, whereas the driver script contains all the gory
    details.'

    this is the level I usually think of managing the distribution
    side of things. I will want to pack up the results and email to my
    collaborators, or decide on the one set of tables and figures to
    write into the manuscript for submission to a journal. If this is
    accepted for publication, this is the one combined package of
    'analytical data and code' that I would consider putting up online
    (to github) as supporting information for the paper.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;


&lt;h4&gt;Public Github repo within a private local &lt;code&gt;overview&lt;/code&gt; git repo: My setup&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;I mostly use one single Emacs orgmode file to run the whole project, using tangle to send chunks of code to scripts, after testing them out using the library of babel&lt;/li&gt;
&lt;li&gt;To keep this version controlled I created a git repo for this&lt;/li&gt;
&lt;li&gt;To test out  have created a fake-data-analysis-project and this includes a local git repository&lt;/li&gt;
&lt;li&gt;in the &lt;code&gt;.gitignore&lt;/code&gt; file I added the commend &lt;code&gt;*&lt;/code&gt; to ignore all subfolders and files&lt;/li&gt;
&lt;li&gt;If I want to add files to this I need to use &lt;code&gt;git add -f thefile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Then I create a public github repo in the results folder (I named the repo: &lt;code&gt;THE-PROJECT-NAME-results&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;pre&gt;&lt;code&gt;
$ cd ~/projects/fake-data-analysis-project
$ mkdir results
$ cd results/
/results$ git init
Initialized empty Git repository in /home/ivan_hanigan/tools/ReproducibleResearchPipelineTemplate/results/.git/
/results$ mkdir 2015-12-20-eda
/results$ git remote add origin git@github.com:ivanhanigan/ReproducibleResearchPipelineTemplate-results.git
$ git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;


&lt;h4&gt;The Result&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;An example of these results are now published at &lt;a href=&quot;https://github.com/ivanhanigan/ReproducibleResearchPipelineTemplate-results&quot;&gt;https://github.com/ivanhanigan/ReproducibleResearchPipelineTemplate-results&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;But the rest of my work is privately held, and version controlled.&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 
</feed>
