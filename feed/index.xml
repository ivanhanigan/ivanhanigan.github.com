<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>DisentangleThings</title>
 <link href="http://ivanhanigan.github.com/feed/" rel="self"/>
 <link href="http://ivanhanigan.github.com/"/>
 <updated>2015-09-17T16:04:52+10:00</updated>
 <id>http://ivanhanigan.github.com/</id>
 <author>
   <name>ivanhanigan</name>
   <email>ivan.hanigan@gmail.com</email>
 </author>

 
 <entry>
   <title>If You Don't Find A Solution In R, Keep Googling!</title>
   <link href="http://ivanhanigan.github.com/2015/09/if-you-dont-find-a-solution-in-r-keep-googling/"/>
   <updated>2015-09-17T00:00:00+10:00</updated>
   <id>http://ivanhanigan.github.com/2015/09/if-you-dont-find-a-solution-in-r-keep-googling</id>
   <content type="html">&lt;p&gt;I've learnt this lesson multiple times. It happens like this.  A solution is not immediately obvious in R so you might think of writing your own function.  Generally there is a solution you just did not google enough.
This time I was tricked a little because the GIS functions have been bad for a long time but getting better very rapidly recently.  A little while ago I had a very successful
outcome from using the &lt;code&gt;raster::extract&lt;/code&gt; function on a large raster file
to get the attributes for a set of points.  I needed to do the same
thing but this time for a shapefile and points.  I looked at the
raster package and saw you can use the &lt;code&gt;raster::intersect&lt;/code&gt; function
here, and it worked on the small sample data I tested with but failed
with the big dataset as it ran out of memory.  I assumed that R had not caught up with the GIS world yet and so I came up with this workaround below by splitting the points data layer into chunks.&lt;/p&gt;

&lt;p&gt;I then got access to ArcMap and was wondering whether it could do it, and it DID!
So then I googled a bit and found the solution was simple:&lt;/p&gt;

&lt;h4&gt;Code:&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sp::over()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;


&lt;p&gt;Here is my hack in case I ever need to pull out the bit that does the splitting up of the points file, or the tryCatch():&lt;/p&gt;

&lt;h4&gt;Code:&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;big_pt_intersect &amp;lt;- function(pts, ply, chunks = 100){
  idx &amp;lt;- split(pts@data, 1:chunks)
  #str(idx)
  for(i in 1:length(idx)){
  #i = 1
  print(i)
    ids &amp;lt;- idx[ [i] ][,1]
  #str(pts@data)
  qc &amp;lt;- pts[pts@data[,1] %in% ids,]
  #str(qc)
  tryCatch(
    chunk &amp;lt;-  raster::intersect(qc, ply), 
    error = function(err){print(err)})
  if(!exists('chunk_out')){

    chunk_out &amp;lt;- chunk@data
  } else {
    chunk_out &amp;lt;- rbind(chunk_out, chunk@data)
  }
  rm(chunk)

  }
  #str(chunk_out)
  return(chunk_out)
}
# NB warning about split length multiple is not fatal, just due to nonequal chunks 
# (ie the geocodes are 2009/100)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;

</content>
 </entry>
 
 
</feed>
